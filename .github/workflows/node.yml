name: NASA PROJECT CI # Workflow
on:  # when this worflow will run with different triggers
  push:
    branches: [ master ] # when changes in master branch
  pull_request: # when there is a pull request on the master branch to save only changes (merging code)
    branches: [ master ]
jobs: # jobs to run when one of the two triggers, by default github actions runs in parallel
  build:
    env: # enviroment in which this job will run
      CI: true # with this the react-create-app test script will know we are runnin CI and stop the watch mode from test
      MONGO_URL: mongodb://localhost/nasa # the DB created for test so it can be tested with our server, name (nasa) of the db inside of mongo, if it not exist one will be created
      #PORT: 9000
    strategy:
      matrix: # to run build in different enviroments
        node-version: [14.x, 16.x] # this will create two build jobs that run in parallel, which each run all the steps 
        mongodb-version: ['4.4'] # we specify the versions of mongo we want to test and we have, with node version this will run 4 parallel jobs if we had 2 mongo versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # to check the lastest version of our code from master
      - name: Use Node.js version ${{matrix.node-version}}
        uses: actions/setup-node@v2 #
        with:
          node-version: ${{matrix.node-version}} # variable for different node version especified above
      - name: Use MongoDB from GitHub Actions # to create mongo for tests
        uses: supercharge/mongodb-github-action@1.7.0 # from github actions mongoDB, starts a mongoDB server specifically for the current job, before we run tests
        with:
          mongodb-version: ${{matrix.mongodb-version}}
      - run: npm isntall # own steps, installs all our node dependencies
      - run: npm run build --prefix client
      - run: npm test # to quit watch mode from create react app when testing in client 
  #deploy:
  #  needs: build # if we want it to run after build secuentially